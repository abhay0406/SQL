<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/abhay/Downloads/New Orders.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="435"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="2528"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,7:mainADDRESS"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="ADDRESS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="124"/><column index="2" value="300"/><column index="3" value="300"/><column index="4" value="141"/><column index="5" value="124"/><column index="6" value="89"/><column index="7" value="93"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ONLINE_CUSTOMER" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="137"/><column index="2" value="176"/><column index="3" value="176"/><column index="4" value="225"/><column index="5" value="176"/><column index="6" value="124"/><column index="7" value="261"/><column index="8" value="212"/><column index="9" value="187"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ORDER_HEADER" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="102"/><column index="2" value="137"/><column index="3" value="126"/><column index="4" value="148"/><column index="5" value="154"/><column index="6" value="148"/><column index="7" value="228"/><column index="8" value="118"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="ORDER_ITEMS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="102"/><column index="3" value="194"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PRODUCT" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="2" value="300"/><column index="3" value="217"/><column index="4" value="156"/><column index="5" value="258"/><column index="6" value="52"/><column index="7" value="71"/><column index="8" value="77"/><column index="9" value="81"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PRODUCT_CLASS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="217"/><column index="2" value="215"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">SELECT PRODUCT_CLASS_CODE, PRODUCT_ID, PRODUCT_DESC, PRODUCT_PRICE,
CASE
WHEN PRODUCT_CLASS_CODE = 2050 THEN PRODUCT_PRICE+2000
WHEN PRODUCT_CLASS_CODE = 2051 THEN PRODUCT_PRICE+500
WHEN PRODUCT_CLASS_CODE = 2052 THEN PRODUCT_PRICE+600
ELSE PRODUCT_PRICE
END
FROM PRODUCT
ORDER BY PRODUCT_CLASS_CODE DESC;

----------------------------------------------------------------------------------------------------------------------------------------------------

SELECT PRODUCT_CLASS_DESC, PRODUCT_ID, PRODUCT_DESC, PRODUCT_QUANTITY_AVAIL,
CASE
WHEN PRODUCT_CLASS_DESC in (&quot;Electronics&quot;,&quot;Computer&quot;) and PRODUCT_QUANTITY_AVAIL &lt;= 10 THEN &quot;Low Stock&quot;
WHEN PRODUCT_CLASS_DESC in (&quot;Electronics&quot;,&quot;Computer&quot;) and PRODUCT_QUANTITY_AVAIL BETWEEN 11 AND 30 THEN &quot;In Stock&quot;
WHEN PRODUCT_CLASS_DESC in (&quot;Electronics&quot;,&quot;Computer&quot;) and PRODUCT_QUANTITY_AVAIL &gt;= 31 THEN &quot;Enough Stock&quot;
WHEN PRODUCT_CLASS_DESC in (&quot;Stationery&quot;,&quot;Clothes&quot;) and PRODUCT_QUANTITY_AVAIL &lt;= 20 THEN &quot;Low Stock&quot;
WHEN PRODUCT_CLASS_DESC in (&quot;Stationery&quot;,&quot;Clothes&quot;) and PRODUCT_QUANTITY_AVAIL BETWEEN 21 AND 80 THEN &quot;In Stock&quot;
WHEN PRODUCT_CLASS_DESC in (&quot;Stationery&quot;,&quot;Clothes&quot;) and PRODUCT_QUANTITY_AVAIL &gt;= 81 THEN &quot;Enough Stock&quot;
WHEN PRODUCT_CLASS_DESC NOT in (&quot;Electronics&quot;,&quot;Computer&quot;,&quot;Stationery&quot;,&quot;Clothes&quot;) and PRODUCT_QUANTITY_AVAIL &lt;= 15 THEN &quot;Low Stock&quot;
WHEN PRODUCT_CLASS_DESC NOT in (&quot;Electronics&quot;,&quot;Computer&quot;,&quot;Stationery&quot;,&quot;Clothes&quot;) and PRODUCT_QUANTITY_AVAIL BETWEEN 16 and 50 THEN &quot;In Stock&quot;
WHEN PRODUCT_CLASS_DESC NOT in (&quot;Electronics&quot;,&quot;Computer&quot;,&quot;Stationery&quot;,&quot;Clothes&quot;) and PRODUCT_QUANTITY_AVAIL &gt;= 51 THEN &quot;Enough Stock&quot;
WHEN PRODUCT_QUANTITY_AVAIL = 0 THEN &quot;Out Of Stock&quot;
ELSE &quot;NIL&quot;
END
FROM PRODUCT INNER JOIN PRODUCT_CLASS on PRODUCT.PRODUCT_CLASS_CODE = PRODUCT_CLASS.PRODUCT_CLASS_CODE;


---------------------------------------------------------------------------------------------------------------------------------------------

SELECT count(CITY), COUNTRY
FROM ADDRESS
WHERE COUNTRY not in (&quot;USA&quot;,&quot;Malaysia&quot;)
GROUP BY COUNTRY
HAVING count(CITY)&gt;1
ORDER by count(city) DESC;


-------------------------------------------------------------------------------------------------------------------------------------------------

SELECT ONLINE_CUSTOMER.CUSTOMER_ID,ONLINE_CUSTOMER.CUSTOMER_FNAME||&quot; &quot;||ONLINE_CUSTOMER.CUSTOMER_LNAME as CUSTOMER_NAME,ADDRESS.CITY, ADDRESS.PINCODE,
ORDER_HEADER.ORDER_ID, PRODUCT_CLASS.PRODUCT_CLASS_DESC, PRODUCT.PRODUCT_DESC,(ORDER_ITEMS.PRODUCT_QUANTITY*PRODUCT.PRODUCT_PRICE) as subtotal
FROM ONLINE_CUSTOMER
INNER JOIN ADDRESS on ONLINE_CUSTOMER.ADDRESS_ID=ADDRESS.ADDRESS_ID
INNER JOIN ORDER_HEADER on ONLINE_CUSTOMER.CUSTOMER_ID=ORDER_HEADER.CUSTOMER_ID
INNER JOIN ORDER_ITEMS on ORDER_HEADER.ORDER_ID=ORDER_ITEMS.ORDER_ID
INNER JOIN PRODUCT on ORDER_ITEMS.PRODUCT_ID=PRODUCT.PRODUCT_ID
INNER JOIN PRODUCT_CLASS on PRODUCT.PRODUCT_CLASS_CODE=PRODUCT_CLASS.PRODUCT_CLASS_CODE
WHERE ORDER_HEADER.ORDER_STATUS = &quot;Shipped&quot; and ADDRESS.PINCODE NOT like &quot;%0%&quot;
ORDER BY 
CUSTOMER_NAME ASC,
subtotal ASC;

----------------------------------------------------------------------------------------------------------------------------------------------

SELECT PRODUCT.PRODUCT_ID, PRODUCT.PRODUCT_DESC, (SUM(ORDER_ITEMS.PRODUCT_QUANTITY)) as TOTALQUANTITY
FROM PRODUCT
LEFT JOIN ORDER_ITEMS on PRODUCT.PRODUCT_ID=ORDER_ITEMS.PRODUCT_ID
WHERE PRODUCT.PRODUCT_ID= 201;

----------------------------------------------------------------------------------------------------------------------------------------------

SELECT ONLINE_CUSTOMER.CUSTOMER_ID,ONLINE_CUSTOMER.CUSTOMER_FNAME||&quot; &quot;||ONLINE_CUSTOMER.CUSTOMER_LNAME as CUSTOMER_NAME, ONLINE_CUSTOMER.CUSTOMER_EMAIL,
ORDER_HEADER.ORDER_ID, ORDER_ITEMS.PRODUCT_QUANTITY, PRODUCT.PRODUCT_DESC,(ORDER_ITEMS.PRODUCT_QUANTITY*PRODUCT.PRODUCT_PRICE) as subtotal
FROM ONLINE_CUSTOMER
LEFT JOIN ORDER_HEADER on ONLINE_CUSTOMER.CUSTOMER_ID=ORDER_HEADER.CUSTOMER_ID
LEFT JOIN ORDER_ITEMS on ORDER_HEADER.ORDER_ID = ORDER_ITEMS.ORDER_ID
LEFT JOIN PRODUCT on ORDER_ITEMS.PRODUCT_ID=PRODUCT.PRODUCT_ID;

</sql><current_tab id="0"/></tab_sql></sqlb_project>
